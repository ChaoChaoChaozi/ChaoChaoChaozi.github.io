<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JAVA面经]]></title>
    <url>%2F2019%2F07%2F10%2FJAVA%E9%9D%A2%E7%BB%8F%2F</url>
    <content type="text"><![CDATA[java面试经历，面试题总结 1.json转换成java对象使用的是jsonObject 2.ArrayList和LinkedList 都是实现了list接口的容器类 get set add removeArrayList由数组组成，增删速度慢，查询速度快 c初始大小10 扩容增长一半LinkedList由链表组成，增删速度快 双向链表实现，没有初始化大小，也没有扩容LinkedList、ArrayList线性不安全的list 使用add添加元素， 使用get（）获取指定下表元素 fore遍历 3.Set和mapSet元素无序，不可重复的集合，map由key-value对组成的集合 TreeSet是二叉树（红黑树） 是自动排序的，不允许放null值HashSet是非线程安全的HashSet是哈希表实现的 数据是无序的 可以存放null 但是只能放一个HashSet是基于Hash算法实现的，其性能通常都优于TreeSet HashMap 非线程安全的 基于哈希表的 适用于插入删除定位TreeMap 非线性安全的 基于红黑树 适用于遍历查找 Set是无序，不可重复的 add remove clear清空 iterator迭代 next取出查看hashmap 初始大小是16 扩容因子是0.75 大小和容量比例超过因子 扩容一倍提高系统并发能力有两种方式 4.高并发，线程指通过设计保证系统能够同时并行处理很多请求。高并发指标有响应时间，吞吐量，每秒查询率，并发用户数。提高系统并发能力的方式有两种：垂直扩展和水平扩展垂直扩展可以提升机器性能。还有提升单机架构性能，使用cache减少IO次数，使用异步增加单服务吞吐量，使用无锁数据结构来减少响应时间高并发的时候使用NIO非阻塞式IO-面向流操作字节字符，NIO有三个组间，分别为：Buffer、Channel、Selectorjdk1.5 新增了java的并发工具包Concurrent，在1.5之前需要手动实现并发的类，1.5之后concurrent提供了大量的工具类， 6.hashMap线程不安全，hashTable是线程安全的 7.redis 8.El 5.String、Stringbuffer与Stringbuilder的区别在执行速度上：Stringbuilder（不安全）-&gt;Stringbuffer（安全）-&gt;String1）如果操作少量的数据用String2）单线程下操作大量的数据用StringBuilder3）多线程下操作大量的数据用StringBuffe HTTP协议协议是指计算机通信网络中两台计算机之间进行通信所必须共同遵守的规定或规则，超文本传输协议(HTTP)是一种通信协议，它允许将超文本标记语言(HTML)文档从Web服务器传送到客户端的浏览器 1.基本数据类型byte int short long double falout char String不是2.装箱封箱装箱：自动将基本数据类型转换为包装器类型拆箱：自动将包装器类型转换为基本数据类型在自动装箱时，编译器调用包装类型的valueof()方法；在自动拆箱时，编译器调用了相应的xxvalue方法避免值的范围超出，体现面向对象思想，3.GC垃圾回收器GC功能可以自动检测对象是否超过作用域从而达到自动回收内存的目的程序员不用担心内存管理，因为垃圾收集器自动进行管理。在系统运行过程中，会产生一些无用的对象，这些对象占据着一定的内存，如果不对这些对象清理回收无用对象的内存，可能会导致内存的耗尽，所以垃圾回收机制回收的是内存。同时GC回收的是堆区和方法区的内存。4.前++和后++不会抛出异常前++是 先+ 后赋值后++是 先赋值 后+5.Switch在jdk1.8以后可以，java虚拟机将字符串转化为哈希值，然后利用整数类型兼容的类型来进行判断 6.数据库索引原理 2019/7/31.多线程原则原子性可见性有序性2.多线程的锁：悲观锁，和乐观锁加锁的原则3.Object方法：getClass、hashCode、equals、toString、notify、notifyAll、wait、finalize4.数据库事务特性原子性、一致性、隔离性、持久性会有 脏读 幻读 不可重复读 隔离机制有四种 ① Serializable (串行化)：可避免脏读、不可重复读、幻读的发生。 ② Repeatable read (可重复读)：可避免脏读、不可重复读的发生。 ③ Read committed (读已提交)：可避免脏读的发生。 ④ Read uncommitted (读未提交)：最低级别，任何情况都无法保证。 触发器 triggercreate trigger 名 after/before 条件on 表明 for each row执行语句 round(x,y)返回参数x的四舍五入的有y位小数的值二、聚合函数(常用于group by从句的select查询中)avg(col)返回指定列的平均值count(col)返回指定列中非null值的个数min(col)返回指定列的最小值max(col)返回指定列的最大值sum(col)返回指定列的所有值之和group_concat(col) 返回由属于一组的列值连接组合而成的结果 创建多线程的方法1）继承Thread类2）实现Runnable接口]]></content>
      <tags>
        <tag>java</tag>
        <tag>面试经历</tag>
        <tag>javaweb</tag>
        <tag>java面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+githup快速搭建个人博客]]></title>
    <url>%2F2019%2F07%2F10%2Fhexo%2Bgithup%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[使用github pages服务搭建博客的好处有： 全是静态文件，访问速度快；免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；博客内容可以轻松打包、转移、发布到其它平台；等等；1.1. 准备工作在开始一切之前，你必须已经： 有一个github账号，没有的话去注册一个；安装了node.js、npm，并了解相关基础知识；安装了git for windows（或者其它git客户端）本文所使用的环境： Windows8.1node.js@5.5.0git@1.9.2hexo@3.2.2搭建github博客2.1. 创建仓库 新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 http://test.github.io 了，是不是很方便？ 由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。 几个注意的地方： 注册的邮箱一定要验证，否则不会成功；仓库名字必须是：username.github.io，其中username是你的用户名；仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。 2.2. 绑定域名当然，你不绑定域名肯定也是可以的，就用默认的 xxx.github.io 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。 首先你要注册一个域名，域名注册以前总是推荐去godaddy，现在觉得其实国内的阿里云也挺不错的，价格也不贵，毕竟是大公司，放心！ 绑定域名分2种情况：带www和不带www的。 域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下你的用户名.github.io的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向你的用户名.github.io，这样可以保证无论是否添加www都可以访问，如下： 然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试： 如果你填写的是没有www的，比如 mygit.me，那么无论是访问 http://www.mygit.me 还是 http://mygit.me ，都会自动跳转到 http://mygit.me如果你填写的是带www的，比如 www.mygit.me ，那么无论是访问 http://www.mygit.me 还是 http://mygit.me ，都会自动跳转到 http://www.mygit.me如果你填写的是其它子域名，比如 abc.mygit.me，那么访问 http://abc.mygit.me 没问题，但是访问 http://mygit.me ，不会自动跳转到 http://abc.mygit.me另外说一句，在你绑定了新域名之后，原来的你的用户名.github.io并没有失效，而是会自动跳转到你的新域名。 配置SSH key为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 $ cd ~/. ssh #检查本机已存在的ssh密钥如果提示：No such file or directory 说明你是第一次使用git。 ssh-keygen -t rsa -C “邮件地址”然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 将刚复制的内容粘贴到key那里，title随便填，保存。 3.1. 测试是否成功$ ssh -T git@github.com # 注意邮箱地址不用改如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到： Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！ 此时你还需要配置： $ git config –global user.name “liuxianan”// 你的github用户名，非昵称$ git config –global user.email “xxx@qq.com“// 填写你的github注册邮箱具体这个配置是干嘛的我没仔细深究。 使用hexo写博客4.1. hexo简介Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。 官网： http://hexo.iogithub: https://github.com/hexojs/hexo 4.2. 原理由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。 4.3. 注意事项安装之前先来说几个注意事项： 很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的；4.4. 安装$ npm install -g hexo4.5. 初始化在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是F:\Workspaces\hexo，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。 $ cd /f/Workspaces/hexo/$ hexo inithexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图： $ hexo g # 生成$ hexo s # 启动服务执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的： hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章： http://blog.liuxianan.com/windows-port-bind.html 第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子： 4.6. 修改主题既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是 官方主题。 个人比较喜欢的2个主题：hexo-theme-jekyll 和 hexo-theme-yilia。 首先下载这个主题： $ cd /f/Workspaces/hexo/$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia下载后的主题都在这里： 修改_config.yml中的theme: landscape改为theme: yilia，然后重新执行hexo g来重新生成。 如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再来重新生成和发布。 4.7. 上传之前在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。 4.8. 上传到github如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。 首先，ssh key肯定要配置好。 其次，配置_config.yml中有关deploy的部分： 正确写法： deploy: type: git repository: git@github.com:liuxianan/liuxianan.github.io.git branch: master错误写法： deploy: type: github repository: https://github.com/liuxianan/liuxianan.github.io.git branch: master后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行hexo d的话一般会报如下错误： Deployer not found: github 或者 Deployer not found: git原因是还需要安装一个插件： npm install hexo-deployer-git –save其它命令不确定，部署这个命令一定要用git bash，否则会提示Permission denied (publickey). 打开你的git bash，输入hexo d就会将本次有改动的代码全部提交，没有改动的不会： 4.9. 保留CNAME、README.md等文件提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的： 由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。 4.10. 常用hexo命令常见命令 hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本缩写： hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy组合命令： hexo s -g #生成并本地预览hexo d -g #生成并上传4.11. _config.yml这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。 需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。 4.12. 写博客定位到我们的hexo根目录，执行命令： hexo new ‘my-first-blog’hexo会帮我们在_posts下生成相关md文件： 我们只需要打开这个文件就可以开始写博客了，默认生成如下内容： 当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。 一般完整格式如下： title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格 description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面以下是正文那么hexo new page ‘postName’命令和hexo new ‘postName’有什么区别呢？ hexo new page “my-second-blog”生成如下： 最终部署时生成：hexo\public\my-second-blog\index.html，但是它不会作为文章出现在博文目录。 4.12.1. 写博客工具那么用什么工具写博客呢？这个我还没去找，以前自己使用editor.md简单弄了个，大家有好用的hexo写博客工具可以推荐个。 4.12.2. 如何让博文列表不显示全部内容默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？ 答案是在合适的位置加上即可，例如：]]></content>
      <tags>
        <tag>hexo+githup快速搭建个人博客，node，hexo教程</tag>
      </tags>
  </entry>
</search>
